---
- name: Mailcatcher install and configure
  block:

    - name: Check that the Mailcatcher user is present
      ansible.builtin.getent:
        database: passwd
        key: "{{ mailcatcher_user }}"
        fail_key: true

    - name: Check that the Mailcatcher group is present
      ansible.builtin.getent:
        database: group
        key: "{{ mailcatcher_group }}"
        fail_key: true

    - name: Requirements present
      ansible.builtin.apt:
        pkg:
          - ruby-dev
          - libsqlite3-dev
        state: present

    - name: Check the latest version of Mailcatcher
      ansible.builtin.uri:
        url: https://github.com/sj26/mailcatcher/releases/latest
        method: HEAD
        status_code: 302
        follow_redirects: none
      check_mode: false
      changed_when: false
      register: mailcatcher_headers

    - name: Debug Mailcatcher URI
      ansible.builtin.debug:
        msg:
          - "Location: {{ mailcatcher_headers.location }}"
          - "Path: {{ mailcatcher_headers.location | urlsplit('path') }}"
          - "Version: {{ mailcatcher_headers.location | urlsplit('path') | basename }}"
          - "Version number: {{ mailcatcher_headers.location | urlsplit('path') | basename | regex_replace('^v') }}"
          - "Version number as string: {{ mailcatcher_headers.location | urlsplit('path') | basename | regex_replace('^v') | string }}"
        verbosity: 2

    - name: Set a variable for the latest version available
      ansible.builtin.set_fact:
        mailcatcher_latest: "{{ mailcatcher_headers.location | urlsplit('path') | basename | regex_replace('^v') | string }}"

    - name: Check if Mailcatcher is installed
      ansible.builtin.stat:
        path: "{{ mailcatcher_path }}"
      register: mailcatcher_executable

    - name: Check Mailcatcher version when installed
      block:

        - name: Check installed Mailcatcher version
          ansible.builtin.command: "{{ mailcatcher_path }} --version"
          check_mode: false
          changed_when: false
          register: mailcatcher_version

        - name: Set a variable for the installed version of Mailcatcher
          ansible.builtin.set_fact:
            mailcatcher_installed: "{{ mailcatcher_version.stdout | replace('mailcatcher ', '') | trim | string }}"

        - name: Set a fact if a newer version is available
          ansible.builtin.set_fact:
            mailcatcher_upgrade: true
          # Using a version comparision fails with the following
          # '<' not supported between instances of 'str' and 'int'
          # when: !str mailcatcher_installed is version(mailcatcher_latest, '<')
          when: mailcatcher_installed != mailcatcher_latest

      when: mailcatcher_executable.stat.exists

    - name: Install Mailcatcher
      community.general.gem:
        name: mailcatcher
        version: "{{ mailcatcher_latest }}"
        # Note that bindir was added in 3.3.0 of community.general
        # bindir: "{{ mailcatcher_path | dirname }}"
        user_install: false
        state: present
      when:
        - mailcatcher_latest is defined
        - ( not mailcatcher_executable.stat.exists ) or ( mailcatcher_upgrade is defined and mailcatcher_upgrade )
      notify: Restart mailcatcher

    - name: Set a fact to indicate that non-privileged user needs to bind to a port number less than 1024
      ansible.builtin.set_fact:
        mailcatcher_grant_capabilities: true
      when:
        - mailcatcher_user != "root"
        - ( mailcatcher_smtp_port | int <= 1024 ) or ( mailcatcher_http_port | int <= 1024 )

    - name: Systemd service file in place
      ansible.builtin.template:
        src: mailcatcher.service.j2
        dest: /etc/systemd/system/mailcatcher.service
        mode: 0644
      notify:
        - Reload systemd
        - Restart mailcatcher

    - name: Mailcatcher service enabled
      ansible.builtin.systemd:
        name: mailcatcher
        enabled: true
      notify: Restart mailcatcher

  tags:
    - mailcatcher
...
